basePath: /api/v1/cliente
definitions:
  dto.OutputDefault:
    properties:
      detail:
        type: string
      instance:
        type: string
      title:
        type: string
    type: object
  dto.Request:
    properties:
      bloqueado:
        type: boolean
      documento:
        type: string
      nome:
        description: ID        string `json:"id,omitempty"`
        type: string
      telefone:
        type: string
    type: object
  dto.Response:
    properties:
      bloqueado:
        type: boolean
      created_at:
        type: string
      documento:
        type: string
      id:
        type: string
      nome:
        type: string
      telefone:
        type: string
      updated_at:
        type: string
    type: object
  dto.ResponseManyPaginated:
    properties:
      clientes:
        items:
          $ref: '#/definitions/dto.Response'
        type: array
      currentPage:
        type: integer
      itemsPerPage:
        type: integer
      totalItems:
        type: integer
      totalPages:
        type: integer
    type: object
host: localhost:8889
info:
  contact: {}
  description: Está API gerencia CPFs.
  title: CPF Management API
  version: "1.0"
paths:
  /:
    get:
      description: Retorna uma lista de clientes, paginada
      parameters:
      - description: Numero da página a ser retornada
        format: int64
        in: query
        name: page
        type: integer
      - description: Quantidade de itens na página a ser retornada
        format: int64
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ResponseManyPaginated'
            type: array
        "500":
          description: Erro interno do servidor
          schema:
            type: string
      summary: Lista todos os clientes
      tags:
      - clientes
    post:
      consumes:
      - application/json
      description: Cria um novo cliente com os dados fornecidos
      parameters:
      - description: Dados do cliente a ser criado
        in: body
        name: cliente
        required: true
        schema:
          $ref: '#/definitions/dto.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.Response'
        "400":
          description: Erro na requisição
          schema:
            type: string
      summary: Cria um novo cliente
      tags:
      - clientes
  /{id}:
    delete:
      description: Deleta um cliente específico com base no ID fornecido
      parameters:
      - description: ID do cliente a ser deletado
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cliente deletado com sucesso"}
          schema:
            $ref: '#/definitions/dto.OutputDefault'
        "404":
          description: cliente não encontrado
          schema:
            type: string
      summary: Deleta um cliente pelo ID
      tags:
      - clientes
    get:
      consumes:
      - application/json
      description: Retorna um cliente específico com base no ID fornecido
      parameters:
      - description: Cliente ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.OutputDefault'
      summary: Retorna um cliente pelo ID
      tags:
      - clientes
    put:
      consumes:
      - application/json
      description: Atualiza um cliente existente com base no ID
      parameters:
      - description: Cliente ID
        in: path
        name: id
        required: true
        type: string
      - description: Dados do cliente para atualização
        in: body
        name: cliente
        required: true
        schema:
          $ref: '#/definitions/dto.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.OutputDefault'
      summary: Atualiza um cliente pelo ID
      tags:
      - clientes
swagger: "2.0"
